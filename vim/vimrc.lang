" Plugins
Plug 'michaeljsmith/vim-indent-object'
Plug 'w0rp/ale'
Plug 'tpope/vim-abolish'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-dispatch'
Plug 'janko-m/vim-test', { 'on': ['TestFile', 'TestLast', 'TestNearest', 'TestSuite', 'TestVisit'] }

Plug 'mattn/emmet-vim'
Plug 'tpope/vim-rails', { 'for': ['ruby', 'haml', 'eruby'] }
Plug 'ternjs/tern_for_vim'
Plug 'leafgarland/typescript-vim'
Plug 'fsharp/vim-fsharp'

" vim-test
nmap <silent> <leader>t :TestNearest<CR>
nmap <silent> <leader>T :TestFile<CR>
nmap <silent> <leader>a :TestSuite<CR>
nmap <silent> <leader>L :TestLast<CR>
nmap <silent> <leader>g :TestVisit<CR>
let test#strategy = "dispatch"

nnoremap <leader>vc :Vcontroller<space>
nnoremap <leader>vm :Vmodel<space>
nnoremap <leader>vv :Vview<space>
nnoremap <leader>sc :Scontroller<space>
nnoremap <leader>sm :Smodel<space>
nnoremap <leader>sv :Sview<space>
nnoremap <leader>ec :Econtroller<space>
nnoremap <leader>em :Emodel<space>
nnoremap <leader>ev :Eview<space>

" vim-rails {{{2
let g:rails_projections = {
    \          "app/decorators/*_decorator.rb": {
    \              "command": "decorator",
    \              "affinity": "model",
    \              "test": "spec/decorators/%s_spec.rb",
    \              "related": "app/models/%s.rb",
    \              "template": "class %SDecorator < Draper::Decorator\nend"
    \          },
    \          "test/factories/*.rb": {
    \              "command":   "factory",
    \              "affinity":  "collection",
    \              "alternate": "app/models/{singular}.rb",
    \              "related":   "db/schema.rb#{}",
    \              "test":          "test/models/{singular}_test.rb",
    \              "template":  "FactoryGirl.define do\n  factory :{singular} do\n  end\nend",
    \              "keywords":  "factory sequence"
    \          },
    \          "spec/factories/*.rb": {
    \              "command":   "factory",
    \              "affinity":  "collection",
    \              "alternate": "app/models/{singular}.rb",
    \              "related":   "db/schema.rb#{}",
    \              "test":          "spec/models/{singular}_test.rb",
    \              "template":  "FactoryGirl.define do\n  factory :{singular} do\n  end\nend",
    \              "keywords":  "factory sequence"
    \          }
    \ }

" emmet {{{2
imap <C-K> <C-Y>,
imap <C-n> <C-Y>n
imap <C-p> <C-Y>N

" Ruby completion {{{1
let g:rubycomplete_buffer_loading = 1
let g:rubycomplete_classes_in_global = 1
let g:rubycomplete_rails = 1
